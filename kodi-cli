#!/bin/bash
## Author: Nawr 
## This script used the youtube code of:
## 	YouTube XBMC Script 1.0
## 	(c) 2013, Tom Laermans - http://tom.laermans.net
## 	This script is released into the public domain.
 
## Configure your XBMC RPC details here
set -x
 
XBMC_HOST=192.168.0.103
XBMC_PORT=80
XBMC_USER=
XBMC_PASS=
LOCK=false

function xbmc_req {
  curl -s -i -X POST --header "Content-Type: application/json" -d "$1" http://$XBMC_USER:$XBMC_PASS@$XBMC_HOST:$XBMC_PORT/jsonrpc >/dev/null 
}
 
function play_youtube {

  REGEX="^.*((youtu.be\/)|(v\/)|(\/u\/\w\/)|(embed\/)|(watch\?))\??v?=?([^#\&\?]*).*"
  
  ID=$1
  
  if [ "$ID" == "" ];
  then
  	echo "Syntax $0:$1 <id|url>"
  	exit
  fi
  
  if [[ $ID =~ $REGEX ]]; then
  	ID=${BASH_REMATCH[7]}
  fi
  
  echo -n "Opening video id $ID on $XBMC_HOST ..."
  xbmc_req '{"jsonrpc": "2.0", "method": "Playlist.Clear", "params":{"playlistid":1}, "id": 1}';
  xbmc_req '{"jsonrpc": "2.0", "method": "Playlist.Add", "params":{"playlistid":1, "item" :{ "file" : "plugin://plugin.video.youtube/?action=play_video&videoid='$ID'"}}, "id" : 1}';
  xbmc_req '{"jsonrpc": "2.0", "method": "Player.Open", "params":{"item":{"playlistid":1, "position" : 0}}, "id": 1}';
  echo " done."
}

function play_pause {
  echo -n "Pausing/Playing the player"
  xbmc_req '{"jsonrpc": "2.0", "method": "Player.PlayPause", "params": { "playerid": 1 }, "id": 1}'
}

function stop {
  echo -n "Stopping the player"
  xbmc_req '{"jsonrpc": "2.0", "method": "Player.Stop", "params": { "playerid": 1 }, "id": 1}'
}

function press_key {

  echo -t "Key pressed: $1" 
  ACTION=''

  if [[ $1 == "A" ]]
  then
	ACTION='Up'	
  fi

  if [[ "$ACTION" != "" ]] && [[ $LOCK == false  ]]
  then
	LOCK=true
	xbmc_req '{"jsonrpc": "2.0", "method": "Input.'$ACTION'", "id": 1}'
  fi
}


## Process command line arguments
while getopts "ypsd" opt; do
        case $opt in
		y)
			#play youtube video
			play_youtube $2	
                        ;;
                p)
			play_pause	
                        ;;
		s) 
			stop
			;;
		d)
			while :
			do
				read  -s -n1 key

				if [[ $key = q ]]
				then
					break
				elif [[ $key != '' ]]
				then
					press_key $key 
				fi
			done
			;;
        esac
done


